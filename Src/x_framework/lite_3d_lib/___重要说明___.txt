此目录提供了一个轻量的数学及几何库，主要目的是为了提供一个适用于常规3D建模建模的数学库及简易的图形库。目前公司的库
在3D建模方面主要有以下几个问题：
1.复杂线型过于偏理论，引入了很多理论上的东西但实际价值不大，实用时效率、内存占用各方面却要为此付出很大的代价

2.各种线形的类冗余度高，很多时候要在同种性质的不同线对象中转来转去，不同功能的接口放在不同的类中，只能这样转换，白
白耗费内存和CPU时间，出图效率低这个因素占的比重不小，而界面和建模开发对于图形和数学的处理要求远远达不到这种理论需
求程度

3.粗放式的引入了一系列关联的第三方库，包括一些科学计算的或者大型的图形库，关联关系极度复杂，没彻底理清楚，不具备一
个底层服务模块应该有的高质量和功能独立性要求，测试不充分，bug多（特别是任意曲线），程序加载这些庞大的库时往往耗费大
量内存和时间

4.公司已有的库基本都是基于2D的（极少数提供了简陋的3D支持，不堪大用，接口通用性差，复用程度低），BIM程序的建设大
量业务操作是在3D空间中进行的，这方面的接口建设程度惨不忍睹
5.对于通用的表达空间图形的数据结构以及建模时用到的描述工程物体的数学对象，往往数据、计算等业务方面对精度要求高，而
在转到图形对象时精度要求低（对速度和模型的数据量要求很大），目前公司的库扩展性和灵活性无法在两种情况下使用一套代码
来直接或简易的进行转换（比较生硬，要显式的使用工具函数）

基于以上原因，决定贴合实际，建立一套轻量的适合建模和描述业务对象的高质量数学库，至于没有另起一个模块的原因主要是这
个数学库体量比较小，新起模块在管理、产品布署上代价划不来，另外一个主要因素是x_framework是通用的程序基础框架，为适
应公司内部产品的开发和重用，这个框架模块除了具备框架功能还应该包含通用性足够强的工具性功能（如通用钢筋表，骨架表等）
，这方面不是从纯框架的理论上考虑的，更多的是顾忌到产品的重用和管理才有此做法，这些工具库必须满足以下条件：
1.提供的数据或工具不牵扯任何的具体业务和界面，适合作为通用的模型数据描述工具，同时能便于图形引擎识别和支持，工具包
主要用于生成数字化的3d工程模型（不用于处理游戏等大量特效的场景和模型），这是是最终决定将此3d库放入框架作为一个
工具包的主要原因之一

2.统一的代码风格、高质量无警告的代码、提供必要的单元测试代码（test_x_framework模块中）

3.必须足够的通用（即要具备高复用性及较宽的应用范围，除主框架以外很少地方会用到的独立工具基本不提供），如果接口需求
繁多、强大，则请使用专业的图形库，不建议使用此轻量工具包

4.体量轻巧，不得依赖任何第三库（框架内部的其它功能可以使用，框架已经依赖的第三方库除MFC和XTP以外不得依赖其它库，如
有必要请移植必要源代码到框架模块，不得直接提供编译后的二进制模块，不利于后续开发环境的升级和维护），如做不到，则最
好放在新模块中，且不要与框架产生关联关系

后来者如有机会维护和重构本框架，为了产品质量、模块独立性和重用性，务必遵守以上原则。同时清楚的认识到，框架的小变动会
有巨大的蝴蝶效应，任何变动都必须要考虑对已有行为的兼容，以及新功能与原框架思想上有一致、连贯的思想和接口习惯，重点
考虑新需求是不是足够的通用、各种复杂情况和高强度下会有有逻辑问题，接口易用性是不满足要求，与实现层的隔离是不是做到
位……三思而后行。

以上说明如有疑问，请咨询WYZ!
----没有万能的银弹式架构，贴合业务特性的架构才是好框架（当然连框架思想的简单结构都没有的东西就不要再搅这水了^_^）
